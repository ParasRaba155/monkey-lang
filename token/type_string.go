// Code generated by "stringer -type=Type"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOF-1]
	_ = x[ASSIGN-2]
	_ = x[PLUS-3]
	_ = x[HYPHEN-4]
	_ = x[ASTERISK-5]
	_ = x[SLASH-6]
	_ = x[BANG-7]
	_ = x[LT-8]
	_ = x[GT-9]
	_ = x[PERCENT-10]
	_ = x[AMPERSAND-11]
	_ = x[PIPE-12]
	_ = x[EQ-13]
	_ = x[NOT_EQ-14]
	_ = x[LTE-15]
	_ = x[GTE-16]
	_ = x[LSHIFT-17]
	_ = x[RSHIFT-18]
	_ = x[AND-19]
	_ = x[OR-20]
	_ = x[PLUS_EQUAL-21]
	_ = x[MINUS_EQUAL-22]
	_ = x[MULTIPLY_EQUAL-23]
	_ = x[DIVIDE_EQUAL-24]
	_ = x[MODULO_EQUAL-25]
	_ = x[BINARY_AND_EQUAL-26]
	_ = x[BINARY_OR_EQUAL-27]
	_ = x[INCREMENT-28]
	_ = x[DECREMENT-29]
	_ = x[COMMA-30]
	_ = x[SEMICOLON-31]
	_ = x[LPAREN-32]
	_ = x[RPAREN-33]
	_ = x[LBRACE-34]
	_ = x[RBRACE-35]
	_ = x[LET-36]
	_ = x[IDENT-37]
	_ = x[INT-38]
	_ = x[FUNCTION-39]
	_ = x[IF-40]
	_ = x[ELSE-41]
	_ = x[RETURN-42]
}

const _Type_name = "ILLEGALEOFASSIGNPLUSHYPHENASTERISKSLASHBANGLTGTPERCENTAMPERSANDPIPEEQNOT_EQLTEGTELSHIFTRSHIFTANDORPLUS_EQUALMINUS_EQUALMULTIPLY_EQUALDIVIDE_EQUALMODULO_EQUALBINARY_AND_EQUALBINARY_OR_EQUALINCREMENTDECREMENTCOMMASEMICOLONLPARENRPARENLBRACERBRACELETIDENTINTFUNCTIONIFELSERETURN"

var _Type_index = [...]uint16{0, 7, 10, 16, 20, 26, 34, 39, 43, 45, 47, 54, 63, 67, 69, 75, 78, 81, 87, 93, 96, 98, 108, 119, 133, 145, 157, 173, 188, 197, 206, 211, 220, 226, 232, 238, 244, 247, 252, 255, 263, 265, 269, 275}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
