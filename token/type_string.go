// Code generated by "stringer -type=Type"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOF-1]
	_ = x[ASSIGN-2]
	_ = x[PLUS-3]
	_ = x[HYPHEN-4]
	_ = x[ASTERISK-5]
	_ = x[SLASH-6]
	_ = x[BANG-7]
	_ = x[LT-8]
	_ = x[GT-9]
	_ = x[EQ-10]
	_ = x[NOT_EQ-11]
	_ = x[LTE-12]
	_ = x[GTE-13]
	_ = x[LSHIFT-14]
	_ = x[RSHIFT-15]
	_ = x[COMMA-16]
	_ = x[SEMICOLON-17]
	_ = x[LPAREN-18]
	_ = x[RPAREN-19]
	_ = x[LBRACE-20]
	_ = x[RBRACE-21]
	_ = x[LET-22]
	_ = x[IDENT-23]
	_ = x[INT-24]
	_ = x[FUNCTION-25]
	_ = x[IF-26]
	_ = x[ELSE-27]
	_ = x[RETURN-28]
}

const _Type_name = "ILLEGALEOFASSIGNPLUSHYPHENASTERISKSLASHBANGLTGTEQNOT_EQLTEGTELSHIFTRSHIFTCOMMASEMICOLONLPARENRPARENLBRACERBRACELETIDENTINTFUNCTIONIFELSERETURN"

var _Type_index = [...]uint8{0, 7, 10, 16, 20, 26, 34, 39, 43, 45, 47, 49, 55, 58, 61, 67, 73, 78, 87, 93, 99, 105, 111, 114, 119, 122, 130, 132, 136, 142}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
